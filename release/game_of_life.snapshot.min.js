/*!
 * An implementation of Conway's Game of Life.
 *
 * Version: snapshot
 * <https://github.com/tkareine/game_of_life>
 *
 * Requires Underscore 1.1.6 or newer.
 *
 * Copyright (c) 2011 Tuomas Kareinen. Licensed under the MIT license.
 */(function(a){"use strict",window.GameOfLife=function(b,c){function g(b,c){return!a.isEqual(b,c)}var d=GameOfLife,e=d.Support.parseCellGrid(b),f=d.Graphics(d.Support.validateCanvas(c),e);return{evolve:function(){function c(){f.drawFrame(e,a),b=e,e=d.Generation.tick(b),g(b,e)&&(a+=1,setTimeout(c,1e3))}var a=0,b;c()}}}})(_),function(a,b){function f(a){var c=a[0].length;return b.all(a,function(a){return a.length===c})}function e(a){return b(a).chain().map(function(a,b){return[a,b]}).reduce(function(a,b){a[b[0]]=b[1];return a},{}).value()}function d(a){this.prototype=Error.prototype,this.name="InvalidArgument",this.message=a,this.toString=function(){return this.name+": "+this.message}}"use strict";var c={Alive:"*",Dead:"."};a.Support={InvalidArgument:d,CellTypes:c,invertObject:e,validateCanvas:function(a){if(!a||!b.isFunction(a.getContext))throw new d("Not a canvas element");return a},parseCellGrid:function(a){function i(a){var b=h[a];if(b===undefined)throw new d("Unknown cell symbol: "+a);return c[b]}var g=a.trim().split("\n"),h;if(g[0].length<1)throw new d("Cell grid is not a two-dimensional matrix");if(!f(g))throw new d("Cell grid is not a rectangle");h=e(c);return b.map(g,function(a){return b.map(a.split(""),i)})}}}(GameOfLife,_),function(a,b){"use strict";var c=a.Support.CellTypes;a.Graphics=function(a,d){function s(a){var b=(a+"").length*10+4;e.fillStyle="#ccc",e.fillRect(f-b,g-n,b,n),e.fillStyle="#555",e.fillText(a,o[0],o[1])}function r(a){e.fillStyle="#222",b.each(a,function(a,d){b.each(a,function(a,b){a===c.Alive&&e.fillRect(b*j+l,d*j+l,m,m)})})}function q(){var a,b;for(a=j+.5;a<f;a+=j)e.moveTo(a,0),e.lineTo(a,g);for(b=j+.5;b<g;b+=j)e.moveTo(0,b),e.lineTo(f,b);e.strokeStyle="#eee",e.stroke()}function p(){e.clearRect(0,0,f,g)}var e=a.getContext("2d"),f=a.width,g=a.height,h=d.length,i=d[0].length,j=f/i,k=j/2,l=2,m=j-l-1,n=16,o=[f-4,g-4];e.font="bold 10px sans-serif",e.textAlign="right",e.textBaseLine="top";return{drawFrame:function(a,b){p(),q(),r(a),s(b)}}}}(GameOfLife,_),function(a,b){function d(a,b){return a===c.Alive?b>=2&&b<=3?c.Alive:c.Dead:b===3?c.Alive:c.Dead}"use strict";var c=a.Support.CellTypes;a.Generation={evolveCell:d,tick:function(a){function i(a,d,e){return b.select(h(d,e),function(b){return a[b[1]][b[0]]===c.Alive}).length}function h(a,c){var d=[[a-1,c-1],[a,c-1],[a+1,c-1],[a-1,c],[a+1,c],[a-1,c+1],[a,c+1],[a+1,c+1]];return b.select(d,function(a){return g(a[0],a[1])})}function g(a,b){return a>=0&&a<f&&b>=0&&b<e}var e=a.length,f=a[0].length;return b.map(a,function(c,e){return b.map(c,function(b,c){return d(b,i(a,c,e))})})}}}(GameOfLife,_)
